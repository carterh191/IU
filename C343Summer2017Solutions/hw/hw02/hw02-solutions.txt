#### selected solutions ####


Homework 02 Task A
------------------



*** textbook exercise 3.3 ***

expressions listed from slowest to fastest growth:

2         constant - no growth at all

log_3(n)  "base 3 logarithm of n" is the inverse function
          of the "exponentiation of 3",
          it is strictly increasing, since the base 3 is > 0,
          so it is faster than constant.

log_2(n)  "base 2 logarithm of n" grows faster than
          the above "base 3 logarithm of n", because
          its inverse "exponentiation of 2" grows slower
          than the "exponentiation of 3"

n^(2/3)   it's the same as the cube root of n^3,
          which grows faster than any logarithm,
          but slower than any linear function

20n       linear

4n^2      quadratic

3^n       exponentiation of 3

n!        as from textbook page 27,
          n!  grows faster than c^n for every constant n.


*** textbook exercise 3.8 ***

 (a) c1 * n
     big-Oh(n)         c = c1, n0 = 1
     big-Omega(n)      c = c1, n0 = 1

 (b) c2 * n^3 + c3
     big-Oh(n^3)       c = (c2 + c3), n0 = 1 
     big-Omega(n^3)    c = c2,        n0 = 1

 (c) c4 * n * log(n) + c5 * n
     big-Oh(n log(n))     c = (c4 + c5), n0 = 10
                          (assuming the base is 10 in log)
     big-Omega(n log(n))  c = c4, n0 = 1

 (d) c6 * 2^n + c7 * n^6
  
     solution:

     solve 2^n / n^6 to see when it crosses 1, i.e.
     when 2^n is always larger than n^6:

     big-Oh(2^n)        c = c6 + 1 for n0 = 30 * c7

     big-Omega(2^n)     c = c6  for n0 = 30 * c7
     
    (the constant for determining n0 is 30 or larger)



Homework 02 Task B
------------------


*** textbook exercise 4.1 ***

  one possible solution is:
  next()
  next()
  remove()
  i.e. move the current position to the right two times,
  then remove the current element.
  (there are other possible correct solutions)
  

*** textbook exercise 4.11 ***

  (a) 14
      (13 would also be an acceptable answer)

  (b) 10

  (c) 6

  (d) 35


